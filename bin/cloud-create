#!/bin/sh

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $DIR/cloud-lib.sh

ADMIN_OS=${ADMIN_OS:-11sp3}
CLOUD_VER=${CLOUD_VER:-3}
CLOUD_NODES=${CLOUD_NODES:-3}
DESTROY=${DESTROY:-1}

if [ $DESTROY -ge 1 ] ; then
    if eval ! $CLOUD_OFFLINE_COND ; then
        echo "Cloud already running, use 'cloud-destroy' first"
        exit 1
    fi

    BASE_OS_SNAPSHOT=$(virsh snapshot-list cloud-admin | grep "base-$ADMIN_OS" | cut -d" " -f2 | tail -n 1)
    echo "Reverting 'cloud-admin' to snapshot '$BASE_OS_SNAPSHOT'..."
    virsh snapshot-revert cloud-admin $BASE_OS_SNAPSHOT
    virsh start cloud-admin
fi

wait_for 300 1 "ping -q -c 1 -w 1 $ADMIN_IP >/dev/null" 'cloud-admin ping'
wait_for 150 1 "netcat -z $ADMIN_IP 22" 'cloud-admin ssh daemon'
echo "Creating cloud admin.."

scp -q $DIR/{crowbar-prep.sh,cloud-lib.sh} root@$ADMIN_IP:

admin_script=$(cat <<EOS
HOST_MIRROR=/srv/nfs/repos ./crowbar-prep.sh -p $CLOUD_VER host-nfs

zypper -n ref
zypper -n patch
zypper -n install -l -t pattern cloud_admin

screen install-suse-cloud -v

# Make CROWBAR_KEY available now:
#/etc/profile.d/crowbar.sh
EOS
)
ssh_run "$admin_script"

if [ $DESTROY -ge 1 ] ; then
    for i in $(seq 1 $CLOUD_NODES) ; do
        virsh start cloud-node$i
    done
fi

admin_script=$(cat <<EOS
source cloud-lib.sh

echo "Allocate nodes..."
admin_allocate 

echo "Waiting for nodes..."
waitnodes nodes

echo "Create proposals..."
for service in database rabbitmq keystone ; do
  echo "Create proposal $service"
  crowbar $service proposal create default
  crowbar $service proposal commit default
  echo $?
  waitnodes proposal $service
  sleep 10
  ret=$?
  echo "exitcode: $ret"
  if [ $ret != 0 ] ; then
    tail -n 90 /opt/dell/crowbar_framework/log/d*.log /var/log/crowbar/chef-client/d*.log
    echo "Error: commiting the crowbar proposal for '$service' failed ($ret)."
    exit 73
  fi
done

admin_openrc

source .openrc.sh

zypper -n install -l python-keystoneclient python-glanceclient python-novaclient python-cinderclient python-neutronclient

keystone service-list
echo $?
EOS
)
ssh_run "$admin_script"
