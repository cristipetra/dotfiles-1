#!/usr/bin/python

from __future__ import print_function

import os

import requirements
from requirements.requirement import Requirement


OS_REQ_PATH = os.path.join(os.path.expanduser('~'), 'Projects', 'openstack', 'requirements')
OS_REQ_FILE = os.path.join(OS_REQ_PATH, "global-requirements.txt")


def print_requirements(reqs):
    for k in reqs:
        print(reqs[k].line)


def get_requirements_dict(filename):
    reqs = {}
    with open(filename, 'r') as f:
        for r in requirements.parse(f.read()):
            reqs[r.name] = r
    return reqs


def requirement_specs_diff(new, old):
    reqs = {}
    for r in old:
        if r in new:
            if new[r].specs != old[r].specs:
                reqs[r] = new[r]
    return reqs


def update_requirements_file(filename, reqs):
    with open(filename, "r") as f:
        lines = f.readlines()
    for index, line in enumerate(lines):
        # Parse every line explicitly to not modify it's general structure
        try:
            line_req = Requirement.parse(line)
            if line_req.name in reqs:
                new_req = reqs[line_req.name]
                print("{0} updated to {1}".format(line_req.name, new_req.specs))
                lines[index] = new_req.line + "\n"
        except ValueError:
            pass  # Most likely a comment line.
    with open(filename, "w") as f:
        f.writelines(lines)


global_reqs = get_requirements_dict(OS_REQ_FILE)

for filename in ["requirements.txt", "test-requirements.txt"]:
    try:
        reqs = get_requirements_dict(filename)
        reqs_diff = requirement_specs_diff(global_reqs, reqs)
        update_requirements_file(filename, reqs_diff)
    except IOError:
        pass  # Either or both file(s) are absent, don't panic!
