#!/bin/sh
#
# Enables fetching of Github-style pull-request refs from REMOTE by adding a
# 'fetch = ..' line to the to the local git config file (.git/config).

usage () {
    # Call as: usage [EXITCODE] [USAGE MESSAGE]
    exit_code=1
    if [[ "$1" == [0-9] ]]; then
        exit_code="$1"
        shift
    fi
    if [ -n "$1" ]; then
        echo >&2 "$*"
        echo
    fi

    me=`basename $0`

    cat <<EOF >&2
Usage: $me [options] REMOTE
Options:
  -h, --help        Show this help and exit
  -f, --fetch       Fetch from REMOTE

Enables fetching of Github-style pull-request refs from REMOTE by adding a
'fetch = ..' line to the to the local git config file (.git/config).
EOF
    exit "$exit_code"
}

parse_opts () {
    while [ $# != 0 ]; do
        case "$1" in
            -h|--help)
                usage 0
                ;;
            -f|--fetch)
                fetch="$1"
                shift
                ;;
            -*)
                usage "Unrecognised option: $1"
                ;;
            *)
                break
                ;;
        esac
    done

    if [ $# -lt 1 ]; then
        usage
    fi

    remote="$1"
    shift
}

fatal () {
    echo "$*" >&2
    exit 1
}

safe_run () {
    if ! "$@"; then
        fatal "$* failed! Aborting." >&2
    fi
}

main () {
    parse_opts "$@"

    if ! safe_run git config --get-all remote.origin.fetch | grep -q "refs\/pull"; then
        safe_run git config --add remote.${remote}.fetch "+refs/pull/*/head:refs/remotes/${remote}/pr/*"
    fi
    if [ -n "$fetch" ]; then
        safe_run git fetch
    fi
}


main "$@"
