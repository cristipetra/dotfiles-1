#!/bin/bash
#
# Script to automatically mirror SLES and Cloud repositories from
# internal servers via rsync.
#
# Also supports mirroring from another mirror.  Useful if you want
# to mirror to e.g. both your laptop and workstation, without
# downloading everything over the WAN twice.

user="${SUSE_NIS_USER:-`id -un`}"

dest="${DEST:-/data/install/mirrors}"
excludes='--exclude=i586 --exclude=ia64 --exclude=src'

usage () {
    # Call as: usage [EXITCODE] [USAGE MESSAGE]
    exit_code=1
    if [[ "$1" == [0-9] ]]; then
        exit_code="$1"
        shift
    fi
    if [ -n "$1" ]; then
        echo "$*" >&2
        echo
    fi

    me=`basename $0`
    cat <<EOF >&2
Usage: $me [options] [REPO [REPO ...]]
Options:
  -h, --help          Show this help and exit
  -d, --dest DIR      Mirror repos to under DIR [$dest]
  -r, --dest-repos    Use sub-directories of '-d' [$dest] instead of [REPO [REPO ...]]
  -l, --local HOST    Mirror from the specified local mirror
                      rather than from upstream
  -b, --bwlimit RATE  Limit socket I/O bandwidth
  -u, --nis-user USER Use SUSE NIS user to access euklid.suse.de (alternative to SUSE_NIS_USER env var)
EOF
    exit "$exit_code"
}

parse_opts () {
    local=
    bwlimit=
    dest_repos=

    while [ $# != 0 ]; do
        case "$1" in
            -h|--help)
                usage 0
                ;;
            -d|--dest)
                if [ $# -lt 2 ]; then
                    usage "--dest requires directory"
                fi
                dest="$2"
                shift 2
                ;;
            -r|--dest-repos)
                dest_repos=1
                shift 1
                ;;
            -l|--local)
                if [ $# -lt 2 ]; then
                    usage "--local requires server name"
                fi
                local="$2"
                shift 2
                ;;
            -b|--bwlimit)
                if [ $# -lt 2 ]; then
                    usage "--bwlimit requires data rate"
                fi
                bwlimit="--bwlimit $2"
                shift 2
                ;;
            -u|--nis-user)
                if [ $# -lt 2 ]; then
                    usage "--user requires NIS username"
                fi
                user="$2"
                shift 2
                ;;
            -*)
                usage "Unrecognised option: $1"
                ;;
            *)
                break
                ;;
        esac
    done

    if [ $dest_repos -eq 1 ] ; then
        repos="$(ls -1 $dest | tr "\n" " ")"
    elif [ $# = 0 ]; then
        repos='Devel:Cloud:Shared:11-SP3 Devel:Cloud:3 Devel:Cloud:3:Staging SLES11-SP3-Pool SLES11-SP3-Updates SLE11-HAE-SP3-Pool SLE11-HAE-SP3-Updates'
    else
        repos="$*"
    fi
}

main () {
    parse_opts "$@"

    rsync="rsync -avzP $excludes $bwlimit"
    rsync="$rsync --delete"

    ibs=$user@euklid.suse.de:/mounts/dist/ibs
    slp=$user@euklid.suse.de:/mounts/dist/install/SLP
    # should use http://download.suse.de/update/ not euklid?
    # https://mailman.suse.de/mlarch/SuSE/research/2012/research.2012.08/msg00009.html
    updates=$user@euklid.suse.de:/mirror/SuSE/zypp-patches.suse.de/x86_64/update
    sles_updates=$updates/SLE-SERVER
    cloud_updates=$updates/SUSE-CLOUD
    sdk_updates=$updates/SLE-SDK
    debug_updates=$updates/SLE-DEBUGINFO
    hae_updates=$updates/SLE-HAE

    for repo in $repos; do
        echo "-------------------- $repo ------------------------"
        case $repo in
            Devel:Cloud:Shared:11-SP3:Update)
                src=$ibs/Devel:/Cloud:/Shared:/11-SP3:/Update/standard/
                ;;
            Devel:Cloud:4)
                src=$ibs/Devel:/Cloud:/3/SLE_11_SP3/
                ;;
            Devel:Cloud:4:Staging)
                src=$ibs/Devel:/Cloud:/3:/Staging/SLE_11_SP3/
                ;;
            Devel:Cloud:Shared:11-SP3)
                src=$ibs/Devel:/Cloud:/Shared:/11-SP3/standard/
                ;;
            Devel:Cloud:3)
                src=$ibs/Devel:/Cloud:/3/SLE_11_SP3/
                ;;
            Devel:Cloud:3:Staging)
                src=$ibs/Devel:/Cloud:/3:/Staging/SLE_11_SP3/
                ;;
            SUSE-Cloud-3-Updates)
                src=$cloud_updates/3/
                ;;
            SUSE-Cloud-3-Pool)
                src=$cloud_updates/3-POOL/
                ;;
            Devel:Cloud:2.0)
                src=$ibs/Devel:/Cloud:/2.0/SLE_11_SP3/
                ;;
            Devel:Cloud:2.0:Staging)
                src=$ibs/Devel:/Cloud:/2.0:/Staging/SLE_11_SP3/
                ;;
            SUSE-Cloud-2.0-Updates)
                src=$cloud_updates/2.0/
                ;;
            SUSE-Cloud-2.0-Pool)
                src=$cloud_updates/2.0-POOL/
                ;;
            SLES11-SP1-Pool)
                src=$sles_updates/11-SP1-POOL/
                ;;
            SLES11-SP1-Updates)
                src=$sles_updates/11-SP1/
                ;;
            SLES11-SP2-Core)
                src=$sles_updates/11-SP2-CORE/
                ;;
            SLES11-SP2-Updates)
                src=$sles_updates/11-SP2/
                ;;
            SLES11-SP3-Pool)
                src=$sles_updates/11-SP3-POOL/
                ;;
            SLES11-SP3-Updates)
                src=$sles_updates/11-SP3/
                ;;
            SLE-11-SP3-SDK)
                src=$slp/SLE-11-SP3-SDK-LATEST/x86_64/DVD1/
                ;;
            SLES11-SP3-SDK-Pool)
                src=$sdk_updates/11-SP3-POOL/
                ;;
            SLES11-SP3-SDK-Updates|SLE-11-SP3-SDK-Updates)
                src=$sdk_updates/11-SP3/
                ;;
            SLES11-SP3-Debug-Pool)
                src=$debug_updates/11-SP3-POOL/
                ;;
            SLES11-SP3-Debug-Updates)
                src=$debug_updates/11-SP3/
                ;;
            SLE11-HAE-SP3-Pool)
                src=$hae_updates/11-SP3-POOL/
                ;;
            SLE11-HAE-SP3-Updates)
                src=$hae_updates/11-SP3/
                ;;
            *)
                echo "Unrecognized repo $repo; aborting" >&2
                exit 1
                ;;
        esac

        [ -n "$local" ] && src=$local:$dest/$repo/sle-11-x86_64/
        [ -d $dest/$repo/ ] || mkdir -p $dest/$repo/
        $rsync $src $dest/$repo/sle-11-x86_64
    done
}

main "$@"
